{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACZ;;;;ICOtB,uEAGC;IAAA,uDAAY;IAAA,4DAAO;;;;;IAFlB,6GAAyC;IAE1C,0DAAY;IAAZ,0EAAY;;;IAWf,yEAIE;IAAA,yEAAkB;IAAA,kEAAO;IAAA,4DAAK;IAChC,4DAAM;;ADnBL,MAAM,YAAY;IALzB;QAME,eAAU,GAAG,2CAAK,CAAC,QAAQ,EAAE,CAAC;QAC9B,gBAAW,GAAG,EAAE,CAAC;KAelB;IAbC,OAAO,CAAC,KAAa;QACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,eAAuB,EAAE,aAAqB;QACpD,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,eAAe,KAAK,aAAa;YACtC,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,WAAW,CAAC;IAClB,CAAC;;wEAhBU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEACE;QAAA,6EACF;QAAA,4DAAK;QAEL,uEACE;QAAA,0GAGC;QACH,4DAAI;QAEJ,yEACE;QAAA,2EAKF;QAFI,yIAAS,gCAA4B,IAAC;QAHxC,4DAKF;QAAA,4DAAM;QAEN,wGAIE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;;QApBI,0DAA0D;QAA1D,6FAA0D;QAa5D,0DAAkC;QAAlC,oGAAkC;;6FDf7B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;;AAYxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa;6FAKJ,SAAS;cAVrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { lorem } from 'faker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  randomText = lorem.sentence();\n  enteredText = '';\n\n  onInput(value: string): void {\n    this.enteredText = value;\n  }\n\n  compare(generatedLetter: string, enteredLetter: string): string {\n    if (!enteredLetter) {\n      return 'pending';\n    }\n\n    return generatedLetter === enteredLetter\n      ? 'correct'\n      : 'incorrect';\n  }\n}\n","<div class=\"container\">\n  <div class=\"columns is-centered\">\n    <div class=\"box column is-one-third\">\n      <h1 class=\"title has-text-centered\">\n        Typing Challenge\n      </h1>\n\n      <p class=\"has-text-centered\">\n        <span\n          [class]=\"compare(letter, enteredText[i])\"\n          *ngFor=\"let letter of randomText.split(''); let i = index\"\n        >{{ letter }}</span>\n      </p>\n\n      <div class=\"field\">\n        <input\n          type=\"text\"\n          class=\"input\"\n          (input)=\"onInput($event.target.value)\"\n        >\n      </div>\n\n      <div\n        *ngIf=\"enteredText === randomText\"\n        class=\"box has-text-centered\"\n      >\n        <h1 class=\"title\">Success</h1>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}